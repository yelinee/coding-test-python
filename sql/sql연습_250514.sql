-- 문제 출처: 프로그래머스
-- 문제: 경기도에 위치한 식품창고 목록 출력하기
SELECT WAREHOUSE_ID, WAREHOUSE_NAME, ADDRESS, 
IFNULL(FREEZER_YN, 'N') AS FREEZER_YN
FROM FOOD_WAREHOUSE
WHERE ADDRESS LIKE '경기도%'
ORDER BY WAREHOUSE_ID;

-- 문제: 이름이 없는 동물의 아이디
SELECT ANIMAL_ID
FROM ANIMAL_INS
WHERE NAME IS NULL;

-- 문제: 이름이 있는 동물의 아이디
SELECT ANIMAL_ID
FROM ANIMAL_INS
WHERE NAME IS NOT NULL;

-- 나이 정보가 없는 회원 수 구하기
SELECT COUNT(*)
FROM USER_INFO
WHERE AGE IS NULL;

-- NULL 처리하기
SELECT ANIMAL_TYPE, IFNULL(NAME, "No name") AS NAME, SEX_UPON_INTAKE
FROM ANIMAL_INS
ORDER BY ANIMAL_ID;

-- ROOT 아이템 구하기
-- 풀이 1)
SELECT ITEM_ID, ITEM_NAME
FROM ITEM_INFO
WHERE ITEM_ID IN (SELECT ITEM_ID
                FROM ITEM_TREE
                WHERE PARENT_ITEM_ID IS NULL)
ORDER BY ITEM_ID;
-- 풀이 2)
SELECT I.ITEM_ID, I.ITEM_NAME
FROM ITEM_INFO AS I
INNER JOIN ITEM_TREE AS T
ON I.ITEM_ID = T.ITEM_ID
WHERE T.PARENT_ITEM_ID IS NULL;

-- 잡은 물고기의 평균 길이 구하기
SELECT ROUND(AVG(IFNULL(LENGTH, 10)), 2) AS AVERAGE_LENGTH
FROM FISH_INFO;

-- 업그레이드 할 수 없는 아이템 구하기
SELECT ITEM_ID, ITEM_NAME, RARITY
FROM ITEM_INFO
WHERE ITEM_ID NOT IN (SELECT DISTINCT PARENT_ITEM_ID
                     FROM ITEM_TREE
                     WHERE PARENT_ITEM_ID IS NOT NULL)
ORDER BY ITEM_ID DESC;

-- 물고기 종류 별 대어 찾기
SELECT I.ID, NI.FISH_NAME, I.LENGTH
FROM FISH_INFO I
INNER JOIN FISH_NAME_INFO NI
ON I.FISH_TYPE = NI.FISH_TYPE
WHERE (I.FISH_TYPE, I.LENGTH) IN (SELECT FISH_TYPE, MAX(LENGTH)
                  FROM FISH_INFO
                  GROUP BY FISH_TYPE)
ORDER BY ID;

-- 연도별 대장균 크기의 편차 구하기
SELECT YEAR(A.DIFFERENTIATION_DATE) AS YEAR, 
        ABS(B.MAX_SIZE - A.SIZE_OF_COLONY) AS YEAR_DEV,
        A.ID
FROM ECOLI_DATA A
LEFT JOIN (
    SELECT YEAR(DIFFERENTIATION_DATE) AS YEAR, 
                    MAX(SIZE_OF_COLONY) AS MAX_SIZE
            FROM ECOLI_DATA
            GROUP BY YEAR(DIFFERENTIATION_DATE)
    ) B 
ON YEAR(A.DIFFERENTIATION_DATE) = B.YEAR
ORDER BY YEAR, YEAR_DEV;
